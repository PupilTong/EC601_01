{
    "$connections": {
        "value": {
            "cognitiveservicescomputervision": {
                "connectionId": "/subscriptions/050cfcdb-2f41-45f0-bfd9-2b678aa165e4/resourceGroups/EC601/providers/Microsoft.Web/connections/cognitiveservicescomputervision",
                "connectionName": "cognitiveservicescomputervision",
                "id": "/subscriptions/050cfcdb-2f41-45f0-bfd9-2b678aa165e4/providers/Microsoft.Web/locations/eastus2/managedApis/cognitiveservicescomputervision"
            },
            "sql": {
                "connectionId": "/subscriptions/050cfcdb-2f41-45f0-bfd9-2b678aa165e4/resourceGroups/EC601/providers/Microsoft.Web/connections/sql",
                "connectionName": "sql",
                "id": "/subscriptions/050cfcdb-2f41-45f0-bfd9-2b678aa165e4/providers/Microsoft.Web/locations/eastus2/managedApis/sql"
            },
            "twitter": {
                "connectionId": "/subscriptions/050cfcdb-2f41-45f0-bfd9-2b678aa165e4/resourceGroups/EC601/providers/Microsoft.Web/connections/twitter",
                "connectionName": "twitter",
                "id": "/subscriptions/050cfcdb-2f41-45f0-bfd9-2b678aa165e4/providers/Microsoft.Web/locations/eastus2/managedApis/twitter"
            }
        }
    },
    "definition": {
        "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
        "actions": {
            "Check_if_var_Hashtag_is_null": {
                "actions": {
                    "Hashtag=hashtag#get_from_http_request)": {
                        "inputs": {
                            "name": "Hashtag",
                            "value": "@triggerBody()?['hashtag']"
                        },
                        "runAfter": {},
                        "type": "SetVariable"
                    }
                },
                "else": {
                    "actions": {
                        "Hashtag=\"#朴素一餐\"#default_hashtag": {
                            "inputs": {
                                "name": "Hashtag",
                                "value": "#朴素一餐"
                            },
                            "runAfter": {},
                            "type": "SetVariable"
                        }
                    }
                },
                "expression": {
                    "and": [
                        {
                            "not": {
                                "equals": [
                                    "@variables('Hashtag')",
                                    ""
                                ]
                            }
                        }
                    ]
                },
                "runAfter": {
                    "Initialize_variable_Hashtag": [
                        "Succeeded"
                    ]
                },
                "type": "If"
            },
            "For_each_3": {
                "actions": {
                    "Clear_TweetsImageCVInfo": {
                        "inputs": {
                            "name": "TweetsImageCVInfo",
                            "value": "@null"
                        },
                        "runAfter": {},
                        "type": "SetVariable"
                    },
                    "Delay": {
                        "inputs": {
                            "interval": {
                                "count": 5,
                                "unit": "Second"
                            }
                        },
                        "runAfter": {
                            "Clear_TweetsImageCVInfo": [
                                "Succeeded"
                            ]
                        },
                        "type": "Wait"
                    },
                    "For_each_4": {
                        "actions": {
                            "Analyze_Image": {
                                "inputs": {
                                    "body": {
                                        "url": "@items('For_each_4')"
                                    },
                                    "host": {
                                        "connection": {
                                            "name": "@parameters('$connections')['cognitiveservicescomputervision']['connectionId']"
                                        }
                                    },
                                    "method": "post",
                                    "path": "/vision/v2.0/analyze",
                                    "queries": {
                                        "format": "Image URL",
                                        "visualFeatures": "Tags,Description,Categories"
                                    }
                                },
                                "runAfter": {
                                    "Clear_OneImageCVInfo": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "ApiConnection"
                            },
                            "AppendCategories": {
                                "inputs": {
                                    "name": "OneImageCVInfo",
                                    "value": "\"Categories\":@{body('Analyze_Image')?['categories']}"
                                },
                                "runAfter": {
                                    "AppendDescription": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "AppendToStringVariable"
                            },
                            "AppendDescription": {
                                "inputs": {
                                    "name": "OneImageCVInfo",
                                    "value": "\"Description\":@{body('Analyze_Image')?['description']},"
                                },
                                "runAfter": {
                                    "AppendTags": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "AppendToStringVariable"
                            },
                            "AppendTags": {
                                "inputs": {
                                    "name": "OneImageCVInfo",
                                    "value": "\"Tags\": @{body('Analyze_Image')?['tags']},"
                                },
                                "runAfter": {
                                    "Analyze_Image": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "AppendToStringVariable"
                            },
                            "AppendToTweetsImageCVInfo": {
                                "inputs": {
                                    "name": "TweetsImageCVInfo",
                                    "value": "@concat('{',string(variables('OneImageCVInfo')),'}')"
                                },
                                "runAfter": {
                                    "AppendCategories": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "AppendToArrayVariable"
                            },
                            "Clear_OneImageCVInfo": {
                                "inputs": {
                                    "name": "OneImageCVInfo",
                                    "value": "@null"
                                },
                                "runAfter": {},
                                "type": "SetVariable"
                            }
                        },
                        "foreach": "@items('For_each_3')['MediaUrls']",
                        "runAfter": {
                            "Delay": [
                                "Succeeded"
                            ]
                        },
                        "type": "Foreach"
                    },
                    "Insert_row_(V2)": {
                        "inputs": {
                            "body": {
                                "TweetsCreatedTime": "@items('For_each_3')?['CreatedAtIso']",
                                "TweetsCreater": "@items('For_each_3')?['UserDetails']?['FullName']",
                                "TweetsCreaterUserId": "@items('For_each_3')?['UserDetails']?['Id']",
                                "TweetsId": "@{items('For_each_3')?['TweetId']}",
                                "TweetsImgInfo": "@{string(variables('TweetsImageCVInfo'))}",
                                "TweetsMediaJson": "@{string(items('for_each_3')?['MediaUrls'])}",
                                "TweetsText": "@{items('For_each_3')['TweetText']}"
                            },
                            "host": {
                                "connection": {
                                    "name": "@parameters('$connections')['sql']['connectionId']"
                                }
                            },
                            "method": "post",
                            "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('ec601database-server.database.windows.net'))},@{encodeURIComponent(encodeURIComponent('ec601database'))}/tables/@{encodeURIComponent(encodeURIComponent('[dbo].[defaultKeywordsSearchStorage]'))}/items"
                        },
                        "runAfter": {
                            "For_each_4": [
                                "Succeeded"
                            ]
                        },
                        "type": "ApiConnection"
                    }
                },
                "foreach": "@body('Search_tweets')",
                "runAfter": {
                    "Initialize_OneImageCVInfo": [
                        "Succeeded"
                    ]
                },
                "type": "Foreach"
            },
            "Initialize_OneImageCVInfo": {
                "inputs": {
                    "variables": [
                        {
                            "name": "OneImageCVInfo",
                            "type": "String"
                        }
                    ]
                },
                "runAfter": {
                    "Initialize_TweetsImageCVInfo": [
                        "Succeeded"
                    ]
                },
                "type": "InitializeVariable"
            },
            "Initialize_TweetsImageCVInfo": {
                "inputs": {
                    "variables": [
                        {
                            "name": "TweetsImageCVInfo",
                            "type": "Array"
                        }
                    ]
                },
                "runAfter": {
                    "Search_tweets": [
                        "Succeeded"
                    ]
                },
                "type": "InitializeVariable"
            },
            "Initialize_variable_Hashtag": {
                "inputs": {
                    "variables": [
                        {
                            "name": "Hashtag",
                            "type": "String"
                        }
                    ]
                },
                "runAfter": {},
                "type": "InitializeVariable"
            },
            "Response": {
                "inputs": {
                    "headers": {
                        "head": "result"
                    },
                    "statusCode": 200
                },
                "kind": "Http",
                "runAfter": {
                    "For_each_3": [
                        "Succeeded"
                    ]
                },
                "type": "Response"
            },
            "SQLqueryNewestTweetsId": {
                "inputs": {
                    "body": {
                        "query": "SELECT TOP 1 TweetsId FROM defaultKeywordsSearchStorage ORDER BY TweetsId DESC "
                    },
                    "host": {
                        "connection": {
                            "name": "@parameters('$connections')['sql']['connectionId']"
                        }
                    },
                    "method": "post",
                    "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('ec601database-server.database.windows.net'))},@{encodeURIComponent(encodeURIComponent('ec601database'))}/query/sql"
                },
                "runAfter": {
                    "Check_if_var_Hashtag_is_null": [
                        "Succeeded"
                    ]
                },
                "type": "ApiConnection"
            },
            "Search_tweets": {
                "inputs": {
                    "host": {
                        "connection": {
                            "name": "@parameters('$connections')['twitter']['connectionId']"
                        }
                    },
                    "method": "get",
                    "path": "/searchtweets",
                    "queries": {
                        "maxId": 1174113789895159800,
                        "maxResults": 99,
                        "searchQuery": "@variables('Hashtag')",
                        "sinceId": "@{body('SQLqueryNewestTweetsId')?['resultsets']?['table1']?[0]?['TweetsId']}"
                    }
                },
                "runAfter": {
                    "SQLqueryNewestTweetsId": [
                        "Succeeded"
                    ]
                },
                "type": "ApiConnection"
            }
        },
        "contentVersion": "1.0.0.0",
        "outputs": {},
        "parameters": {
            "$connections": {
                "defaultValue": {},
                "type": "Object"
            }
        },
        "triggers": {
            "manual": {
                "inputs": {
                    "method": "GET",
                    "schema": {
                        "hashtag": {
                            "type": "string"
                        }
                    }
                },
                "kind": "Http",
                "type": "Request"
            }
        }
    }
}